// Code generated by MockGen. DO NOT EDIT.
// Source: ./../../app/upgrades/expected_keepers.go

// Package mock_upgrades is a generated GoMock package.
package mock_upgrades

import (
	context "context"
	reflect "reflect"

	types "github.com/CosmWasm/wasmd/x/wasm/types"
	gomock "github.com/golang/mock/gomock"
)

// MockWasmMsgServer is a mock of WasmMsgServer interface.
type MockWasmMsgServer struct {
	ctrl     *gomock.Controller
	recorder *MockWasmMsgServerMockRecorder
}

// MockWasmMsgServerMockRecorder is the mock recorder for MockWasmMsgServer.
type MockWasmMsgServerMockRecorder struct {
	mock *MockWasmMsgServer
}

// NewMockWasmMsgServer creates a new mock instance.
func NewMockWasmMsgServer(ctrl *gomock.Controller) *MockWasmMsgServer {
	mock := &MockWasmMsgServer{ctrl: ctrl}
	mock.recorder = &MockWasmMsgServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWasmMsgServer) EXPECT() *MockWasmMsgServerMockRecorder {
	return m.recorder
}

// MigrateContract mocks base method.
func (m *MockWasmMsgServer) MigrateContract(arg0 context.Context, arg1 *types.MsgMigrateContract) (*types.MsgMigrateContractResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MigrateContract", arg0, arg1)
	ret0, _ := ret[0].(*types.MsgMigrateContractResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MigrateContract indicates an expected call of MigrateContract.
func (mr *MockWasmMsgServerMockRecorder) MigrateContract(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MigrateContract", reflect.TypeOf((*MockWasmMsgServer)(nil).MigrateContract), arg0, arg1)
}
